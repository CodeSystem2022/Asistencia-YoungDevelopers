Diaz Micaela Ejercicio Cubo Python

class Cubo:
    def __init__(self, ancho, alto, profundidad):
        self.ancho = ancho
        self.alto = alto
        self.profundidad = profundidad

    def Volumen(self):
        return self.ancho * self.alto * self.profundidad

ancho = int(input('Ingrese el ancho del cubo: '))
alto = int(input('Ingrese el alto del cubo: '))
profundidad = int(input('Ingrese la profundidad  del cubo: '))

cubo1 = Cubo(ancho,alto,profundidad)
print(f'El volumen del cubo es :{cubo1.Volumen()}')

------------------------------------------------------------------------------------------------------
Rebolledo Lourdes
# Creamos la clase: Rectángulo
class Rectangulo:

    def __init__(self,altura,base):
        self.altura = altura
        self.base = base
    def calcular_area(self):
        return self.base * self.altura

base = int(input('Ingrese el número para la base del rectángulo: '))
altura = int(input('Ingrese el número para la altura del rectángulo: '))
rectangulo1 = Rectangulo(base, altura)
print(f' El area del rectángulo es: {rectangulo1.calcular_area()}')

-------------------------------------------------------------------------------------------------------
Rebolledo Lujan
#creamos la clase de aritmetica
class Artimetica:
    """
    El nombre de este tipo de comentario es: DocString, esto es documentación de la clase de Python
    vamos a hacer en ésta clase algunas operaciones de: suma, resta, multiplicación y más.
    """
    def __init__(self, operandoA, operandoB):
        self.operandoA = operandoA
        self.operandoB = operandoB
    def sumar(self):
        return self.operandoA + self.operandoB
    def restar(self):
        return self.operandoA - self.operandoB
    def multiplicar(self):
        return self.operandoA * self.operandoB
    def dividir(self):
        return self.operandoA / self.operandoB

aritmetica1 = Artimetica(5, 8) # le pasamos los argumentos
print(f'La suma de los números es: {aritmetica1.sumar()}')
print(f'La resta de los números es: {aritmetica1.restar()}')
print(f'La multiplicación de los números es: {aritmetica1.multiplicar()}')
print(f'La división de los números es: {aritmetica1.dividir():.2f}')
---------------------------------------------------------------------------------------------------------------------------------------
Montoya Lucas
#Tarea: crear 3 objetos mas utilizando los metodos getter and setter 
#para modificar, y mostrar los cambios con el metodo mostrar_detalle
class Persona2:
    def __init__(self, nombre, apellido,edad): #Esta encapsulado
        self._nombre = nombre
        self._apellido = apellido
        self._edad = edad
    def mostrar_detalles(self):
        print(f'Los datos a mostrar son los siguientes: {self._nombre} {self._apellido} {self._edad}')
    
    @property 
    def nombre(self): #Metodo Getter
        print('Estamos usando el metodo get')
        return self._nombre
    @nombre.setter
    def nombre(self, nombre): #Metodo Setter
        print('Estamos usando el metodo set')
        self._nombre = nombre
    
    @property 
    def apellido(self): #Metodo Getter
        return self._apellido
    @apellido.setter
    def apellido(self, apellido): #Metodo Setter
        self._apellido = apellido
   
   @property
    def edad(self): #Metodo Getter
        return self._edad
    @edad.setter
    def edad(self,edad): #Metodo Setter
        self._edad = edad

# Objeto 1:
persona2 = Persona2('Leo','Messi',30)
print(persona2.nombre)
print(persona2.apellido)
print(persona2.edad)
persona2.nombre = 'Lionel'
persona2.apellido = 'Messi'
persona2.edad = 35
print(persona2.mostrar_detalles())

#Objeto 2:
persona3 = Persona2('Kun','Aguero',32)
print(persona3.nombre)
print(persona3.apellido)
print(persona3.edad)
persona3.nombre = 'Sergio'
persona3.apellido = 'Aguero'
persona3.edad = 34
print(persona3.mostrar_detalles())

#Objeto 3:
persona4 = Persona2('Dibu','Martinez',28)
print(persona4.nombre)
print(persona4.apellido)
print(persona4.edad)
persona4.nombre = 'Emiliano'
persona4.apellido = 'Martinez'
persona4.edad = 30
print(persona4.mostrar_detalles())
---------------------------------------------------------------------------------------------------------------------------------------
